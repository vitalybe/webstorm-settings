<templateSet group="Angular">
  <template name="a-module-with-routing" value="import { NgModule } from '@angular/core';&#10;import { Routes, RouterModule } from '@angular/router';&#10;&#10;const routes: Routes = [$END$]&#10;&#10;@NgModule({&#10; imports: [RouterModule.$forChild$(routes)],&#10; exports: [],&#10; declarations: [],&#10;})&#10;export class $Name$Module { }" description="Angular module with routing combined into one file" toReformat="true" toShortenFQNames="true">
    <variable name="forChild" expression="" defaultValue="&quot;forChild&quot;" alwaysStopAt="true" />
    <variable name="Name" expression="" defaultValue="&quot;Name&quot;" alwaysStopAt="true" />
    <context />
  </template>
  <template name="a-injectable-providedin" value="@Injectable({providedIn: $1$})$END$" description="Angular Injectable ProvidedIn" toReformat="true" toShortenFQNames="true">
    <variable name="1" expression="" defaultValue="&quot;'root'&quot;" alwaysStopAt="true" />
    <context />
  </template>
  <template name="a-ngrx-data-entity-collection-data-service" value="import { Injectable } from '@angular/core';&#10;import {&#10;  EntityCollectionServiceBase,&#10;  EntityCollectionServiceElementsFactory&#10;} from 'ngrx-data';&#10;import { $Model$ } from '$2$';&#10;&#10;@Injectable({ providedIn: 'root' })&#10;export class $Model$Service extends EntityCollectionServiceBase&lt;$Model$&gt; {&#10;  constructor(serviceElementsFactory: EntityCollectionServiceElementsFactory) {&#10;    super('$Model$', serviceElementsFactory);&#10;  }&#10;}" description="NgRx Data Entity Collection Data Service" toReformat="true" toShortenFQNames="true">
    <variable name="2" expression="" defaultValue="&quot;../core&quot;" alwaysStopAt="true" />
    <variable name="Model" expression="" defaultValue="&quot;Model&quot;" alwaysStopAt="true" />
    <context />
  </template>
  <template name="a-ngrx-data-entity-metadata" value="import { EntityMetadataMap } from 'ngrx-data';&#10;&#10;const entityMetadata: EntityMetadataMap = {&#10;  $Model1$: {},$END$&#10;};&#10;&#10;export const entityConfig = {&#10;  entityMetadata&#10;};" description="NgRx Data Entity Metadata" toReformat="true" toShortenFQNames="true">
    <variable name="Model1" expression="" defaultValue="&quot;Model1&quot;" alwaysStopAt="true" />
    <context />
  </template>
  <template name="a-ngrx-data-store-module" value="import { NgModule } from '@angular/core';&#10;import { EffectsModule } from '@ngrx/effects';&#10;import { StoreModule } from '@ngrx/store';&#10;import { StoreDevtoolsModule } from '@ngrx/store-devtools';&#10;import { NgrxDataModule } from 'ngrx-data';&#10;import { environment } from '../../environments/environment';&#10;import { entityConfig } from './entity-metadata';&#10;&#10;@NgModule({&#10;  imports: [&#10;    StoreModule.forRoot({}),&#10;    EffectsModule.forRoot([]),&#10;    environment.production ? [] : StoreDevtoolsModule.instrument(),&#10;    NgrxDataModule.forRoot(entityConfig)&#10;  ]&#10;})&#10;export class AppStoreModule {}" description="NgRx Data Store Module" toReformat="true" toShortenFQNames="true">
    <context />
  </template>
</templateSet>