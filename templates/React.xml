<templateSet group="React">
  <template name="con" value="constructor(props: Props) {&#10; super(props);&#10; $END$&#10;}&#10;" description="Adds a default constructor for the class that contains props as arguments" toReformat="true" toShortenFQNames="true">
    <context />
  </template>
  <template name="rcts" value="import * as React from &quot;react&quot;;&#10;&#10;interface Props {&#10;}&#10;&#10;interface State {&#10;  &#10;}&#10;&#10;export class $TM_FILENAME_BASE$ extends React.Component&lt;Props, State&gt; {&#10;  readonly state: State = {};&#10;&#10;  constructor(props: Props) {&#10;    super(props);&#10;  }&#10;&#10;  render() {&#10;    return (&#10;      &lt;div&gt;&#10;        $END$&#10;      &lt;/div&gt;&#10;    );&#10;  }&#10;}&#10;" description="Creates a React component class with TypeScript" toReformat="true" toShortenFQNames="true">
    <variable name="TM_FILENAME_BASE" expression="capitalize(camelCase(fileNameWithoutExtension()))" defaultValue="&quot;&quot;" alwaysStopAt="true" />
    <context>
      <option name="TS_CLASS" value="false" />
      <option name="TS_EXPRESSION" value="false" />
      <option name="TypeScript" value="true" />
    </context>
  </template>
</templateSet>