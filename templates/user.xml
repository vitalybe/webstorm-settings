<templateSet group="user">
  <template name="tmp" value="print &quot;!!!!!! $NAME$ !!!!!!!&quot;" description="" toReformat="true" toShortenFQNames="true">
    <variable name="NAME" expression="pyFunctionName()" defaultValue="" alwaysStopAt="false" />
  </template>
  <template name="lct" value="let logger = loggerCreator(&quot;test&quot;, moduleLogger);" description="logger create - test" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JSX_HTML" value="true" />
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="imp" value="import $WHAT$ from &quot;app/$PATH$&quot;;" description="import" toReformat="true" toShortenFQNames="true">
    <variable name="PATH" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="WHAT" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JSX_HTML" value="true" />
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="lc" value="$LOGGER_VAR$loggerCreator(&quot;$METHOD$&quot;, moduleLogger);" description="" toReformat="true" toShortenFQNames="true">
    <variable name="LOGGER_VAR" expression="" defaultValue="&quot;const logger = &quot;" alwaysStopAt="true" />
    <variable name="METHOD" expression="jsMethodName()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JS_STATEMENT" value="true" />
      <option name="TypeScript" value="true" />
    </context>
  </template>
  <template name="sd" value="const $NAME$ = styled.div`&#10;  ${(props: {}) =&gt; css`&#10;    $CURSOR$&#10;  `};&#10;`;" description="Styled div" toReformat="true" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="CURSOR" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JS_STATEMENT" value="true" />
      <option name="TS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="sc" value="const $COMPONENT$Styled = styled($COMPONENT$)`&#10;  ${(props: {}) =&gt; css`&#10;    $CURSOR$&#10;  `};&#10;`;" description="Styled component" toReformat="true" toShortenFQNames="true">
    <variable name="COMPONENT" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="CURSOR" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JS_STATEMENT" value="true" />
      <option name="TS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="mobxAsync" value="  private $NAME$AsyncObservable = promisedComputed(undefined, async () =&gt; {&#10;  });&#10;&#10;  @computed&#10;  get $NAME$Async() {&#10;    return this.$NAME$AsyncObservable;&#10;  }" description="" toReformat="false" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="TS_CLASS" value="true" />
    </context>
  </template>
</templateSet>